InverterDevice:
  description: 'The data model is intended to describe the mechanical, electrical characteristics of an Inverter according to *DC - Direct Current Information* supplied as input and *AC - Alternating Current Information*  returned as output. *Remark*: This Data Model can be used directly as a main entity to describe the device [Inverter] or as a sub-entity of the Data Model {DEVICE] using a reference by the [refDevice] attribute.'
  properties:
    address:
      description: 'The mailing address'
      properties:
        addressCountry:
          description: 'Property. The country. For example, Spain. Model:''https://schema.org/addressCountry'''
          type: string
        addressLocality:
          description: 'Property. The locality in which the street address is, and which is in the region. Model:''https://schema.org/addressLocality'''
          type: string
        addressRegion:
          description: 'Property. The region in which the locality is, and which is in the country. Model:''https://schema.org/addressRegion'''
          type: string
        areaServed:
          description: 'Property. The geographic area where a service or offered item is provided. Model:''https://schema.org/areaServed'''
          type: string
        postOfficeBoxNumber:
          description: 'Property. The post office box number for PO box addresses. For example, 03578. Model:''https://schema.org/postOfficeBoxNumber'''
          type: string
        postalCode:
          description: 'Property. The postal code. For example, 24004. Model:''https://schema.org/https://schema.org/postalCode'''
          type: string
        streetAddress:
          description: 'Property. The street address. Model:''https://schema.org/streetAddress'''
          type: string
      type: Property
      x-ngsi:
        model: https://schema.org/address
    alternateName:
      description: 'An alternative name for this item'
      type: Property
    application:
      description: 'Target application of the Device regarding the environment. A unique value. Enum:''electricMobility, energyStorage, emergencyStorage, lighting, industrialStorage, houseHoldStorage, robotics, production, other'''
      items:
        enum:
          - electricMobility
          - energyStorage
          - emergencyStorage
          - lighting
          - industrialStorage
          - houseHoldStorage
          - robotics
          - production
          - other
        type: string
      type: Property
    areaServed:
      description: 'The geographic area where a service or offered item is provided'
      type: Property
      x-ngsi:
        model: https://schema.org/Text
    brandName:
      description: 'Brand Name of the item'
      type: Property
      x-ngsi:
        model: https://schema.org/brand
    coolingSystem:
      description: ' Cooling System of the Device. Enum:''Convection, OptiCool, Regulated-fan, Other'''
      enum:
        - Convection
        - OptiCool
        - Regulated-fan
        - Other
      type: Property
    dataProvider:
      description: 'A sequence of characters identifying the provider of the harmonised data entity.'
      type: Property
    dateCreated:
      description: 'Entity creation timestamp. This will usually be allocated by the storage platform.'
      format: date-time
      type: Property
    dateLastReported:
      description: 'A timestamps which denotes the last time when the device successfully reported data. Date and time in an ISO8601 UTCformat'
      format: date-time
      type: Property
      x-ngsi:
        model: https://schema.org/DateTime
    dateModified:
      description: 'Timestamp of the last modification of the entity. This will usually be allocated by the storage platform.'
      format: date-time
      type: Property
    description:
      description: 'A description of this item'
      type: Property
    dimension:
      description: 'External dimension of a Panel. The format is structured by a sub-property of 3 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **CMT** represents Centimeter'
      properties:
        depth:
          minimum: 0
          type: number
        height:
          minimum: 0
          type: number
        length:
          minimum: 0
          type: number
      type: Property
      x-ngsi:
        units: Centimeters
    documentation:
      description: 'Technical Documentation (Installation / maintenance / used)'
      format: uri
      type: Property
      x-ngsi:
        model: https://schema.org/URL
    id:
      anyOf: &inverterdevice_-_properties_-_owner_-_items_-_anyof
        - description: 'Property. Identifier format of any NGSI entity'
          maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - description: 'Property. Identifier format of any NGSI entity'
          format: uri
          type: string
      description: 'Unique identifier of the entity'
      type: Property
    installationCondition:
      description: 'Condition and possibility of use in the following environments. Enum:''extremeHeat, extremeCold, extremeHumidity, extremeClimate, desert, sand, marine, saline, dust, seismic, other''.'
      items:
        enum:
          - extremeHeat
          - extremeCold
          - extremeHumidity
          - extremeClimate
          - desert
          - sand
          - marine
          - saline
          - dust
          - seismic
          - other
        type: string
      type: Property
    installationMode:
      description: 'Positioning of the device in relation to a ground reference system. A unique value. Enum:''aerial, ground, pole, roofing, underGround, wall, other'''
      enum:
        - aerial
        - ground
        - pole
        - roofing
        - underGround
        - wall
        - other
      type: Property
    inverterStatus:
      description: 'Status of the inverter. A combination of values.'
      items:
        enum:
          - 00-OnSector
          - 01-PowerFailure/OnBattery
          - 02-LossCommunication
          - 03-BatteryFault
          - 04-SystemShutDown
          - 05-TensionDip
          - 06-OverVoltage
          - 07-VoltageDrop
          - 08-VoltageIncrease
          - 09-LineNoise
          - 10-FrequencyVariation
          - 11-TransientDistortion
          - 12-HarmonicDistortion
        type: string
      type: Property
    location:
      $id: https://geojson.org/schema/Geometry.json
      $schema: "http://json-schema.org/draft-07/schema#"
      oneOf:
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                type: number
              minItems: 2
              type: array
            type:
              enum:
                - Point
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON Point'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              minItems: 2
              type: array
            type:
              enum:
                - LineString
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON LineString'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 4
                type: array
              type: array
            type:
              enum:
                - Polygon
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON Polygon'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  type: number
                minItems: 2
                type: array
              type: array
            type:
              enum:
                - MultiPoint
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiPoint'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    type: number
                  minItems: 2
                  type: array
                minItems: 2
                type: array
              type: array
            type:
              enum:
                - MultiLineString
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiLineString'
          type: object
        - properties:
            bbox:
              items:
                type: number
              minItems: 4
              type: array
            coordinates:
              items:
                items:
                  items:
                    items:
                      type: number
                    minItems: 2
                    type: array
                  minItems: 4
                  type: array
                type: array
              type: array
            type:
              enum:
                - MultiPolygon
              type: string
          required:
            - type
            - coordinates
          title: 'GeoJSON MultiPolygon'
          type: object
      title: 'GeoJSON Geometry'
    mPPTPVVoltageDC:
      description: 'Minimum and Maximum Photo-voltaic voltage range, MPPT allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt'
      properties:
        max:
          minimum: 0
          type: number
        min:
          minimum: 0
          type: number
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: Volt
    manufacturerName:
      description: 'Manufacturer Name of the item'
      type: Property
      x-ngsi:
        model: https://schema.org/manufacturer
    maxInputCurrentParallelAssembly:
      description: 'Max. Current Input with an Parallel Assembly. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere. Unis:''Ampere'''
      type: Property
      x-ngsi:
        model: https://schema.org/Number
    maxOutputPowerAC:
      description: 'Maximum Power or Apparent Power. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **D46** represents Volt Ampere'
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: 'Volt Ampere'
    modelName:
      description: 'Model name of the item'
      type: Property
      x-ngsi:
        model: https://schema.org/model
    moduleYieldRate:
      description: 'Yield Rate of the Device. The format is structured by a sub-property of 2 items (European Standard - Manufacturer Standard). The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **P1** represents Percent'
      properties:
        eta:
          type: number
        euro:
          type: number
      type: Property
      x-ngsi:
        model: http://schema.org/StructuredValue
    name:
      description: 'The name of this item.'
      type: Property
    nbInputParallelDC:
      description: 'Maximum Number of inputs (in parallel)'
      type: Property
      x-ngsi:
        model: https://schema.org/Number.
    nbMPPTrackersDC:
      description: 'Number of MPP trackers'
      type: Property
      x-ngsi:
        model: https://schema.org/Number.
    noiseLevel:
      description: 'Sound Power level of the Device. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **2N** represents Decibel'
      type: Property
      x-ngsi:
        model: http://schema.org/Number
        units: dB
    nominalAmpereAC:
      description: 'Nominal Amperage *(Code I)*. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere'
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: Ampere
    nominalAmpereDC:
      description: 'Nominal Amperage. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere'
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: Ampere
    nominalFrequencyAC:
      description: 'Nominal Frequency. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **HTZ** represents Hertz'
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: Hertz
    nominalFrequencyDC:
      description: ' Nominal Frequency. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **HTZ** represents Hertz'
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: Hertz
    nominalPowerAC:
      description: 'Nominal Power . The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **WTT** represents Watt'
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: Watt
    nominalPowerDC:
      description: 'Nominal Power or Maximum Power factor for cos phi=1. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **WTT** represents Watt'
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: Watt
    nominalVoltageAC:
      description: 'Nominal battery voltage *(Code U)*. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt'
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: Volt
    nominalVoltageDC:
      description: 'Nominal voltage. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt'
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: Volt
    operatingAirHumidity:
      description: 'Ambient operating Air Humidity range. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **P1** represents Percent.'
      properties:
        max:
          maximum: 1
          minimum: 0
          type: number
        min:
          maximum: 1
          minimum: 0
          type: number
      type: Property
    operatingAmpereAC:
      description: 'Minimum and Maximum Ampere allowed.. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere'
      properties:
        max:
          minimum: 0
          type: number
        min:
          minimum: 0
          type: number
      type: Property
      x-ngsi:
        model: http://schema.org/Number
        units: Ampere
    operatingAmpereDC:
      description: 'Minimum and Maximum Ampere allowed.. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **AMP** represents Ampere'
      properties:
        max:
          minimum: 0
          type: number
        min:
          minimum: 0
          type: number
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: Ampere
    operatingFrequencyAC:
      description: 'Minimum and Maximum Frequency allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **HTZ** represents Hertz'
      properties:
        max:
          minimum: 0
          type: number
        min:
          minimum: 0
          type: number
      type: Property
      x-ngsi:
        model: http://schema.org/StructuredValue
        units: Hertz
    operatingFrequencyDC:
      description: 'Minimum and Maximum Frequency allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **HTZ** represents Hertz'
      properties:
        max:
          minimum: 0
          type: number
        min:
          minimum: 0
          type: number
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: Hertz
    operatingTemperature:
      description: 'Ambient operating temperature range. This is the minimum and maximum resistance to cold and heat. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **CEL** represents Degree Celsius.'
      properties:
        max:
          minimum: 0
          type: number
        min:
          minimum: -50
          type: number
      type: Property
    operatingVoltageAC:
      description: 'Minimum and Maximum voltage allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt'
      properties:
        max:
          minimum: 0
          type: number
        min:
          minimum: 0
          type: number
      type: Property
      x-ngsi:
        model: http://schema.org/StructuredValue
        units: Volt
    operatingVoltageDC:
      description: 'Minimum and Maximum voltage allowed. The format is structured by a sub-property of 2 items. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt.'
      properties:
        max:
          minimum: 0
          type: number
        min:
          minimum: 0
          type: number
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: Volt
    overVoltageCategory:
      description: 'Over voltage category. - I : connection to circuits with transient over voltages at an appropriate low level. - II : main insulation and additional insulation (earth terminal). - III : fixed installations with reliability and availability making subject to specific specifications. - IV : materials at the origin of the electrical installation such as electric meters and main materials over current protection.'
      enum:
        - I
        - II
        - III
        - IV
      type: Property
    owner:
      description: 'A List containing a JSON encoded sequence of characters referencing the unique Ids of the owner(s)'
      items:
        anyOf: *inverterdevice_-_properties_-_owner_-_items_-_anyof
        description: 'Property. Unique identifier of the entity'
      type: Property
    phaseType:
      description: 'Type of Phase. A unique value. Enum:''singlePhase,threePhase'''
      enum:
        - singlePhase
        - threePhase
      type: Property
    possibilityOfUse:
      description: 'Possibility of use. Enum:''mixed, mobile, stationary, other'''
      enum:
        - mixed
        - mobile
        - stationary
        - other
      type: Property
    powerFactorAC:
      description: 'Power factor for cos phi'
      maximum: 1
      minimum: 0
      type: Property
      x-ngsi:
        model: http://schema.org/Number
        units: 'A value between [0,1] Volt'
    protectionClassSLK:
      description: 'Protection class (SKL). - 0 : main insulation without earth connection. - 1 : main insulation and additional insulation (earth terminal). - 2 : double or reinforced insulation (equivalent to twice the main insulation) without accessible metal part. - 3 : operating in very low safety voltage (SELV) (50V maximum).'
      enum:
        - 0
        - 1
        - 2
        - 3
      type: Property
    protectionIK:
      description: 'IK ''*Mecanic Protection*'' level relating to numeric classification for the degrees of protection provided by enclosures for electrical equipment against external mechanical impacts, according to International Electro technical Commission standard (EN 62-262). - IK varies from 0 (minimum resistance) to 10 (maximum resistance) which represents an Impact Energy (Unit Joule)'
      type: Property
      x-ngsi:
        model: https://schema.org/Number
    protectionIP:
      description: 'IP ''*Ingress Protection*'' for the Junction Box. This is the level classifies and rates the degree of protection provided by mechanical casings and electrical enclosures against intrusion, dust, accidental contact, and water according to International Electrotechnical Commission standard (EN 60-529). - First digit: Solid particle protection (Single numeral: 0–6 or ''X''). - Second digit: Liquid ingress protection (Single numeral: 0–9 or ''X'' ).- Third digit: Personal Protection  against access to dangerous parts (optional additional letter).- Fourth digit: Other protections (optional additional letter).'
      type: Property
    refDevice:
      anyOf:
        - description: 'Property. Identifier format of any NGSI entity'
          maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - description: 'Property. Identifier format of any NGSI entity'
          format: uri
          type: string
      description: 'Reference to the Main Entity [Device](https://github.com/smart-data-models/dataModel.Device/blob/master/Device/doc/spec.md) if used as second link.'
      type: Relationship
    refPointOfInterest:
      anyOf:
        - description: 'Property. Identifier format of any NGSI entity'
          maxLength: 256
          minLength: 1
          pattern: ^[\w\-\.\{\}\$\+\*\[\]`|~^@!,:\\]+$
          type: string
        - description: 'Property. Identifier format of any NGSI entity'
          format: uri
          type: string
      description: 'Reference to a [PointOfInterest](https://github.com/smart-data-models/dataModel.PointOfInterest/blob/master/PointOfInterest/doc/spec.md) linked with the observation.'
      type: Relationship
    seeAlso:
      description: 'list of uri pointing to additional resources about the item'
      oneOf:
        - items:
            format: uri
            type: string
          minItems: 1
          type: array
        - format: uri
          type: string
      type: Property
    self-consumption:
      description: 'Self-consumption during nigth. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes).  For instance, **WTT** represents Watt'
      type: Property
      x-ngsi:
        model: http://schema.org/Number
        units: Watt
    serialNumber:
      description: 'Serial numbers of the item'
      type: Property
      x-ngsi:
        model: https://schema.org/brand
    source:
      description: 'A sequence of characters giving the original source of the entity data as a URL. Recommended to be the fully qualified domain name of the source provider, or the URL to the source object.'
      type: Property
    startingVoltageDC:
      description: 'Starting voltage. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **VLT** represents Volt'
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: Volt
    supplyPhaseNb:
      description: 'Number of power supply phases'
      minimum: 0
      type: Property
      x-ngsi:
        model: https://schema.org/Number
    topology:
      description: 'Description of the topology of the installation.'
      type: Property
    type:
      description: 'NGSI Entity type. It has to be InverterDevice'
      enum:
        - InverterDevice
      type: Property
    typeOfUse:
      description: 'Accepted use regarding its positioning in an indoor / outdoor environment.. Enum:''indoor, outdoor, mixed, other'''
      enum:
        - indoor
        - outdoor
        - mixed
        - other
      type: Property
    weight:
      description: 'Weight. The unit code (text) is given using the [UN/CEFACT Common Codes](http://wiki.goodrelations-vocabulary.org/Documentation/UN/CEFACT_Common_Codes). For instance, **KGM** represents Kilogram'
      minimum: 0
      type: Property
      x-ngsi:
        model: https://schema.org/Number
        units: Kilograms
  required:
    - id
    - type
    - location
    - dateLastReported
    - phaseType
  type: object
